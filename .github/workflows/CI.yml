name: CI
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  quick-checks-unit-tests:
    name: Forge quick checks and unit tests
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3

      - name: Install Foundry
        uses: onbjerg/foundry-toolchain@v1
        with:
          version: nightly

      - name: Check code formatting
        run: forge fmt --check
      
      - name: Install submodules
        run: forge install

      - name: Check gas snapshots
        run: forge snapshot # --check TODO re-enable once /master gas snapshot is up-to-date
        env:
          RPC_URL: https://eth-mainnet.alchemyapi.io/v2/SzNcOCE77s6nmGIal7MxtuzF--q2HZgx

      - name: Run tests
        run: forge test --optimize --no-match-contract integration
        env:
          RPC_URL: https://eth-mainnet.alchemyapi.io/v2/SzNcOCE77s6nmGIal7MxtuzF--q2HZgx

      - name: Coverage
        run: |
          forge coverage --report lcov
        id: coverage
        env:
          RPC_URL: https://eth-mainnet.alchemyapi.io/v2/SzNcOCE77s6nmGIal7MxtuzF--q2HZgx

      - uses: codecov/codecov-action@v3

  static-analysis:
    name: Slither static analysis
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install library
        run: poetry install --no-interaction
        
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
      
      - name: Install submodules
        run: forge install

      - name: Run Slither
        run: poetry run slither --solc-remaps "solmate=lib/solmate/src chainlink=lib/chainlink base64=lib/base64/src" --sarif results.sarif --fail_high --solc-args optimize src/
